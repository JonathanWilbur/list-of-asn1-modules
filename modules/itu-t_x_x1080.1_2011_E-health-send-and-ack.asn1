




E-health-send-and-ack (X.1080.1:10/2011)


-- Module E-health-send-and-ack (X.1080.1:10/2011)
-- See also ITU-T X.1080.1 (10/2011)
-- See also the index of all ASN.1 assignments needed in this document

E-health-send-and-ack {joint-iso-itu-t(2) telebiometrics(42)
  e-health-protocol(3) modules(0) send-and-ack(2) version1(1)} 
  "/Telebiometrics/E_Health_Protocol/Modules/Send-and-ack/Version1"
  DEFINITIONS AUTOMATIC TAGS ::=
BEGIN

IMPORTS
  EncryptionOptions, IntegrityOptions
    FROM E-health-setup {joint-iso-itu-t(2) telebiometrics(42)
      e-health-protocol(3) modules(0) set-up(1) version1(1)};

-- Type and CLASS definitions for simple messages
SIMPLE-MESSAGE ::= CLASS {
  &amp;id                 OBJECT IDENTIFIER UNIQUE,
  &amp;Type               ,
  &amp;Errors             ERROR,
  &amp;registration-info  CHOICE {implicit  UTF8String,
                                  -- shall be reference to a web-site
                                  explicit  UniversalString,
                                  ...
  }
}
WITH SYNTAX {
  MESSAGE IDENTIFIED BY &amp;id
  USING TYPE &amp;Type
  POSSIBLE ERRORS &amp;Errors
  REGISTERED AS &amp;registration-info
}

ERROR ::= CLASS {&amp;code       INTEGER,
                 &amp;Parameter  
}WITH SYNTAX {ERROR &amp;code
              WITH &amp;Parameter
}

Simple-Messages SIMPLE-MESSAGE ::=
  {...}

Identified-Simple-Message ::= SEQUENCE {
  sm-Identifier  SIMPLE-MESSAGE.&amp;id({Simple-Messages}),
  sm-Content     SIMPLE-MESSAGE.&amp;Type({Simple-Messages}{@sm-Identifier})
}

Command ::= SEQUENCE {
  encryptionOptions  EncryptionOptions,
  integrityOptions   IntegrityOptions,
  content
    OCTET STRING
      (CONSTRAINED BY {-- encoding of an Identified-Simple-Message value by the current ---- encoding rules included in a CMS ContentInfo sequence for encryption --
         
         -- and/or integrity if needed -- })
}

Ack ::= CHOICE {
  ok     NULL,
  error
    SEQUENCE {code       ERROR.&amp;code({Simple-Message-Errors}),
              parameter  ERROR.&amp;Parameter({Simple-Message-Errors}{@.code})
  }
}

Simple-Message-Errors ERROR ::= {Simple-Messages.&amp;Errors}

Response ::= SEQUENCE {
  encryptionOptions  EncryptionOptions,
  integrityOptions   IntegrityOptions,
  content
    OCTET STRING
      (CONSTRAINED BY {-- encoding of an Ack value by the current encoding rules ---- included in a CMS ContentInfo sequence for encryption and/or --
         
         -- integrity if needed -- })
}

END

-- Generated by Asnp, the ASN.1 pretty-printer of France Telecom R&amp;D

